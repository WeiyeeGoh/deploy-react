{"version":3,"sources":["components/Login.js","components/Compose.js","components/MessageList.js","components/UserList.js","App.js","index.js"],"names":["Login","login","connected","useState","URL","username","password","userInput","setUserInput","show","setShow","useEffect","console","log","class","Modal","Header","closeButton","Title","Body","className","id","type","aria-label","aria-describedby","onChange","e","target","value","Footer","Button","variant","onClick","Compose","loginData","token","message","setMessage","loginInfo","setLoginInfo","onKeyDown","event","key","bodyFormData","FormData","append","options","method","baseURL","url","data","headers","axios","MessageList","messageList","messages","setMessages","bottomRef","useRef","current","addEventListener","currentTarget","scroll","top","scrollHeight","behavior","ref","myList","map","msg_data","msg_type","msg","dt","Date","toLocaleString","toUpperCase","buildMessageList","UserList","currentUsers","userList","setUserList","JSON","parse","stringify","b","buildUserList","App","setLoginData","setToken","setMessageList","setConnected","then","response","accessToken","eventSource","EventSource","onmessage","lastEventId","close","parsed_data","filter","out","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8987dc5.chunk.js","sourcesContent":["import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useState, useEffect } from \"react\";\n\nexport const Login = ({login, connected}) => {\n\n    const [userInput, setUserInput] = useState({\n        URL: \"\",\n        username: \"\",\n        password: \"\",\n    })\n    const [show, setShow] = useState(true);\n\n    useEffect(() => {\n        console.log(\"USE EFFECT\")\n        if (!connected) {\n            setUserInput({\n                URL: \"\",\n                username: \"\",\n                password: \"\",\n            })\n        }\n        setShow(!connected);\n\n    }, [connected])\n\n    const handleLogin = () => {\n        login(userInput)\n    }\n\n    return (\n        <div class=\"overlay\">\n            <Modal show={show}>\n                <Modal.Header closeButton>\n                <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                <div className=\"input-group input-group-sm mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">URL</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={e => setUserInput({...userInput, URL: e.target.value})} value={userInput['URL']}/>\n                </div>\n                <div className=\"input-group input-group-sm mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Username</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={e => setUserInput({...userInput, username: e.target.value})} value={userInput['username']}/>\n                </div>\n                <div className=\"input-group input-group-sm mb-3\">\n                    <div className=\"input-group-prepend \">\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Password</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={e => setUserInput({...userInput, password: e.target.value})} value={userInput['password']}/>\n                </div>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleLogin}>\n                    Login\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Login","import React from 'react'\nimport axios from 'axios'; \nimport { useState, useEffect } from \"react\";\n\nexport const Compose = ({loginData, token}) => {\n\n  const [message, setMessage] = useState(\"\");\n  const [loginInfo, setLoginInfo] = useState(null);\n\n  useEffect(() => {\n    setLoginInfo(loginData);\n  }, [loginData])\n\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter' && message != \"\" && loginData != null) {\n\n      var bodyFormData = new FormData();\n      bodyFormData.append('message', message);\n      const options = {\n        method: 'post', \n        baseURL: loginData[\"URL\"],\n        url: '/message', \n        data: bodyFormData,\n        headers: {'Authorization': 'Bearer ' + token}\n      };\n      axios(options);\n\n      setMessage(\"\");\n    }\n  }\n\n  return (\n    <div id=\"compose\">\n      <input type=\"text\" className=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onKeyDown={handleKeyDown} onChange={e => setMessage(e.target.value)} value={loginInfo == null? \"You need to be logged into send a message\" : message}/>\n    </div>\n  )\n}\n\nexport default Compose","import React from 'react'\nimport { useState, useEffect,useRef } from \"react\";\n\nexport const MessageList = ({messageList}) => {\n\n  const [messages, setMessages] = useState([]);\n  const bottomRef = useRef(null);\n  \n  useEffect(()=>{\n    if (bottomRef) {\n        bottomRef.current.addEventListener('DOMNodeInserted', event => {\n        const { currentTarget: target } = event;\n        target.scroll({ top: target.scrollHeight, behavior: 'smooth' });\n      });\n    }\n  })\n\n  useEffect(() => {\n    console.log(\"USE EFFECT\")\n    setMessages(messageList);\n  }, [messageList])\n\n  const buildMessageList = () => {\n    console.log(\"BUILD\")\n    let myList = messages.map((msg_data) => {\n\n      let msg_type = msg_data[0];\n      let msg = msg_data[1];\n      \n      let dt = new Date(msg[\"created\"] * 1000);\n\n      if (msg_type == \"message\") {\n        return (\n            <li>{dt.toLocaleString(\"en-US\")} ({msg[\"user\"]}) {msg[\"message\"]}</li>\n        )\n      } else if (msg_type == \"join\" || msg_type == \"part\") {\n        return (\n            <li>{dt.toLocaleString(\"en-US\")} {msg_type.toUpperCase()}: {msg[\"user\"]}</li>\n        )\n      } else if (msg_type == \"serverstatus\") {\n        return (\n            <li>{dt.toLocaleString(\"en-US\")} STATUS: {msg[\"status\"]}</li>\n        )\n      }\n    })\n    return (<ul >{myList}</ul>);\n  }\n\n\n    return (\n        <div id=\"message_box\" ref={bottomRef}>\n            {buildMessageList()}\n        </div>\n    )\n}\n\nexport default MessageList\n\n\n","import React from 'react'\nimport { useState, useEffect } from \"react\";\n\nexport const UserList = ({currentUsers}) => {\n\n  const [userList, setUserList] = useState(currentUsers);\n\n  useEffect(() => {\n    console.log(\"USE EFFECT\")\n    console.log(JSON.parse(JSON.stringify(currentUsers)));\n    setUserList(currentUsers);\n  }, [currentUsers])\n\n  const buildUserList = () => {\n    console.log(\"BUILD\")\n    console.log(JSON.parse(JSON.stringify(userList)));\n    let myList = userList.map((b) => {\n        return (\n            <li>{b}</li>\n        )\n    })\n    return (<ul><li><u><b><i>USER LIST</i></b></u></li>{myList}</ul>);\n  }\n\n  return (\n      <div id=\"userlist\">\n          {buildUserList()}\n      </div>\n  )\n}\n\nexport default UserList\n","// import React, {useState, useEffect } from 'react';\nimport React from 'react';\nimport axios from 'axios'; \nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './components/Login';\nimport Compose from './components/Compose';\nimport MessageList from './components/MessageList';\nimport UserList from './components/UserList';\nimport { useState, useEffect } from \"react\";\n\nexport const App = () => {\n    \n  const [loginData, setLoginData] = useState(null);\n  const [token, setToken] = useState(null);\n  const [userList, setUserList] = useState([]);\n  const [messageList, setMessageList] = useState([]);\n  const [connected, setConnected] = useState(false);\n\n\n  useEffect(() => {\n\n    if(loginData){\n\n      var bodyFormData = new FormData();\n      bodyFormData.append('username', loginData['username']);\n      bodyFormData.append('password', loginData['password']);\n      const options = {\n        method: 'post', \n        baseURL: loginData['URL'],\n        url: '/login', \n        data: bodyFormData,\n      }\n      \n      axios(options)\n      .then(response => response.data.token)\n      .then(function(accessToken) {\n\n        console.log(\"Set Tokem to \"+accessToken);\n        setToken(accessToken);\n\n        var eventSource = new EventSource(loginData['URL']+\"/stream/\" + accessToken);\n        eventSource.onmessage = e => {\n          console.log(\"Toke \"+accessToken);\n          console.log(\"EVENT: \" + e.type);\n          console.log(\"ID: \" + e.lastEventId);\n          console.log(e.data);\n        };\n\n        //      DISCONNECT       //\n        eventSource.addEventListener('Disconnect', e => {\n          console.log(\"DISCONNECT\");\n          // try {\n            \n          //   setUserList(userList => [...userList].filter(username =>  username.slice(username.find(loginData[\"username\"]))));\n          // } catch(e) {\n          //   console.log(e);\n          // }\n\n          eventSource.close();\n          setConnected(false);\n          setLoginData(null);\n        });\n\n        //      JOIN       //\n        eventSource.addEventListener('Join', e => {\n          console.log(\"WHY CHANGE??\");\n          console.log(JSON.parse(JSON.stringify(userList)));\n\n          console.log(\"JOIN\")\n          try {\n            console.log(e.data);\n            let parsed_data = JSON.parse(e.data);\n            \n            if (\"user\" in parsed_data && \"created\" in parsed_data) {\n              setUserList(userList => [...userList, parsed_data[\"user\"]]);\n              setMessageList(messageList => [[...messageList].filter(username => username !== parsed_data[\"user\"]), [\"join\", parsed_data]]);\n            }\n\n          } catch(e) {\n            console.log(\"JOIN: data is not legit\");\n            console.log(e);\n          }\n        });\n\n        //      MESSAGE       //\n        eventSource.addEventListener('Message', e => {\n          console.log(\"MESSAGE\")\n          try {\n            let parsed_data = JSON.parse(e.data);\n            console.log(\"MESSAGES :SLDKFJ SDF:LKSJD F:SDLFKJ DSF:KLJ \")\n            console.log(e.data)\n            \n            if (\"user\" in parsed_data && \"message\" in parsed_data && \"created\" in parsed_data) {\n              setMessageList(messageList => [...messageList, [\"message\", parsed_data]]);\n            }\n          } catch(e) {\n            console.log(\"MESSAGES: data is not legit\");\n            console.log(e);\n          }\n        });\n\n        //      PART       //\n        eventSource.addEventListener('Part', e => {\n          console.log(\"PART\")\n          try {\n            console.log(e.data);\n            let parsed_data = JSON.parse(e.data);\n            \n            if (\"user\" in parsed_data && \"created\" in parsed_data) {\n              setUserList(userList => [...userList].filter(username => username !== parsed_data[\"user\"]));\n              setMessageList(messageList => [...messageList, [\"part\", parsed_data]]);\n            }\n          } catch(e) {\n            console.log(\"PART: data is not legit\");\n            console.log(e);\n          }\n        });\n\n        //      SERVER STATUS       //\n        eventSource.addEventListener('ServerStatus', e => {\n          console.log(\"SERVERSTATUS\")\n          try {\n            console.log(e.data);\n            let parsed_data = JSON.parse(e.data);\n            \n            if (\"status\" in parsed_data && \"created\" in parsed_data) {\n              setMessageList(messageList => [...messageList, [\"serverstatus\", parsed_data]]);\n            }\n          } catch(e) {\n            console.log(\"SERVERSTATUS: data is not legit\");\n            console.log(e);\n          }\n        });\n\n        //      USERS       //\n        eventSource.addEventListener('Users', e => {\n          console.log(\"USERS\");\n\n          try {\n            console.log(e.data);\n            let parsed_data = JSON.parse(e.data);\n\n            if (\"users\" in parsed_data) {\n              setUserList(parsed_data[\"users\"]);\n            }\n\n            setConnected(true);\n          } catch(e) {\n            console.log(\"USERS: data is not legit\");\n            console.log(e);\n          }\n        });\n\n        //      ERROR       //\n        eventSource.addEventListener('error', e => {\n          console.log(\"ERROR\");\n\n          try {\n            setLoginData(null);\n            setConnected(false);\n          } catch(e) {\n            console.log(\"ERROR: data is not legit\");\n            console.log(e);\n          }\n        });\n\n      });\n    }\n\n  }, [loginData])\n\n       \n  // if (loginData == null) {\n  //   return (\n  //     <div className=\"container\">\n  //       <Login login={out => setLoginData(out)} connected={connected} />\n  //     </div>\n  //     );\n  // } else {\n  //   return (\n  //     <div className=\"container\">\n  //       <div id=\"title\" class= {connected? \"green_title\" : \"red_title\" }><span>CS291</span></div>\n  //       <MessageList messageList={messageList} />\n  //       <UserList currentUsers={userList} />\n  //       <Compose url={loginData[\"URL\"]} token={token} />\n  //     </div>\n  //   );\n  // }\n\n\n  return (\n      <div className=\"container\">\n\n        <Login login={out => setLoginData(out)} connected={connected} style={setLoginData==null? \"display:none\" : \"\"}/>\n        \n        <div id=\"title\" class= {connected? \"green_title\" : \"red_title\" }><span>CS291</span></div>\n        <MessageList messageList={messageList} />\n        <UserList currentUsers={userList} />\n        <Compose loginData={loginData} token={token} />\n      </div>\n    );\n      \n\n      \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}